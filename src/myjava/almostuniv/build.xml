<?xml version='1.0'?>

<project name='memorial' default='run' basedir='.'>
	<description>
		Memorial to Geni datadump
	</description>

	<!-- set global properties for this build -->
	<property name='src'   location='src'/>
	<property name='lib'	 location='lib'/>
	<property name='build' location='build'/>
	<property name='dist'	 location='dist'/>
	<property name='distlib' location='dist/lib'/>
	<property name='javadoc' location='javadoc'/>
	<property name='data'	 location='dat'/>
	<property name='distfile' value='${dist}/program.jar'/>

	<property name='source-version' value='1.7'/>

	<path id='classpath'>
		<fileset dir='${lib}' includes='*.jar'/>
	</path>

	<!-- making directories -->
	<target name='mkdir'
	  description='Prepare directories for server'>
		<echo message='Creating needed directories...'/>
		<mkdir dir='${lib}'/>
		<mkdir dir='${data}'/>
		<mkdir dir='${build}'/>
		<mkdir dir='${dist}'/>
		<mkdir dir='${distlib}'/>
		<mkdir dir='${javadoc}'/>
	</target>

	<target name='env' depends='mkdir'
	  description='Learn about the environment of the build machine'>
	</target>

	<target name='compile' depends='generate'
  	  description='Compile'>
		<!-- compiling the source -->
  		<echo message='Compiling the source...'/>
		<javac srcdir='${src}' destdir='${build}' debug='on' optimize='on' nowarn='false' source='${source-version}' target='${source-version}'>
			<classpath refid="classpath"/>

			<!-- following a very temporary list of files to be build -->
			<include name='**/*.java'/>
		</javac>
	</target>

	<target name='generate' depends='mkdir'
		description='Generate all the autogenerated code'>
		<!-- Create the time stamp -->
		<tstamp/>

  		<!-- generate the Java content classes from the schema -->
	</target>
	
	<target name='distlibcopy'>
		<copy todir='${distlib}' flatten='true'>
			<path refid="classpath"/>
		</copy>
	</target>

	<target name='dist' depends='compile,unit,distlibcopy'
	  description='Generate the distribution' >
			<path id='distclasspath'>
				<fileset dir='${distlib}' includes='*.jar'/>
			</path>

		<manifestclasspath property="jarlib" jarfile="${distfile}">
			<classpath refid="distclasspath"/>
		</manifestclasspath>
		<jar jarfile='${distfile}' basedir='${build}'>
			<manifest>

				<attribute name='Main-Class' value='Entry'/>
				<attribute name='Built-By' value='${user.name}'/>
				<attribute name='Class-Path' value='${jarlib}' />
				<section name='common'>
					<attribute name='Specification-Title' value='Memorial Importer'/>
					<attribute name='Specification-Version' value='${product-version}'/>
					<attribute name='Specification-Vendor' value='www.almost-university.com'/>
					<attribute name='Implementation-Title' value='memorialimport'/>
					<attribute name='Implementation-Version' value='${product-version} ${TODAY}'/>
					<attribute name='Implementation-Vendor' value='www.almost-university.com'/>
				</section>
			</manifest>
		</jar>
	</target>

	<target name='run' depends='dist'
	  description='Run the distribution' >
		<echo>Executing the program</echo>
		<java jar='${distfile}' fork='true' />
	</target>

	<!-- ================================================== -->
	<target name='clean'
	   description='Delete class files and docs dir.'>
  		<echo message='Removing old build and distribution...'/>
		<delete dir='${build}'/>
		<delete dir='${dist}'/>

	</target>

	<target name='unit-build' depends='compile,env' if='junit.present'
	  description='Build the JUnit files'>
		<echo message='Building the JUnit tests'/>
	</target>

	<target name='unit' depends='unit-build,env' if='junit.present'
	  description='Run the JUnit tests'>
		<echo message='Running JUnit test'/>
	</target>

	<target name='javadoc' depends='mkdir'>
		<javadoc sourcepath='${src}' destdir='${javadoc}'>
			<fileset dir='${src}' includes='**/*.java' />
		</javadoc>
	</target>
</project>

